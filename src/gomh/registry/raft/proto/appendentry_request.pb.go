// Code generated by protoc-gen-go. DO NOT EDIT.
// source: appendentry_request.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	appendentry_request.proto

It has these top-level messages:
	AppendEntriesReuqest
	AppendEntriesResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendEntriesReuqest struct {
	Term          uint64      `protobuf:"varint,1,opt,name=Term" json:"Term,omitempty"`
	FirstLogIndex uint64      `protobuf:"varint,2,opt,name=FirstLogIndex" json:"FirstLogIndex,omitempty"`
	PreLogIndex   uint64      `protobuf:"varint,3,opt,name=PreLogIndex" json:"PreLogIndex,omitempty"`
	PreLogTerm    uint64      `protobuf:"varint,4,opt,name=PreLogTerm" json:"PreLogTerm,omitempty"`
	CommitIndex   uint64      `protobuf:"varint,5,opt,name=CommitIndex" json:"CommitIndex,omitempty"`
	LeaderName    string      `protobuf:"bytes,6,opt,name=LeaderName" json:"LeaderName,omitempty"`
	LeaderHost    string      `protobuf:"bytes,7,opt,name=LeaderHost" json:"LeaderHost,omitempty"`
	LeaderExHost  string      `protobuf:"bytes,8,opt,name=LeaderExHost" json:"LeaderExHost,omitempty"`
	Entries       []*LogEntry `protobuf:"bytes,9,rep,name=Entries" json:"Entries,omitempty"`
}

func (m *AppendEntriesReuqest) Reset()                    { *m = AppendEntriesReuqest{} }
func (m *AppendEntriesReuqest) String() string            { return proto1.CompactTextString(m) }
func (*AppendEntriesReuqest) ProtoMessage()               {}
func (*AppendEntriesReuqest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *AppendEntriesReuqest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesReuqest) GetFirstLogIndex() uint64 {
	if m != nil {
		return m.FirstLogIndex
	}
	return 0
}

func (m *AppendEntriesReuqest) GetPreLogIndex() uint64 {
	if m != nil {
		return m.PreLogIndex
	}
	return 0
}

func (m *AppendEntriesReuqest) GetPreLogTerm() uint64 {
	if m != nil {
		return m.PreLogTerm
	}
	return 0
}

func (m *AppendEntriesReuqest) GetCommitIndex() uint64 {
	if m != nil {
		return m.CommitIndex
	}
	return 0
}

func (m *AppendEntriesReuqest) GetLeaderName() string {
	if m != nil {
		return m.LeaderName
	}
	return ""
}

func (m *AppendEntriesReuqest) GetLeaderHost() string {
	if m != nil {
		return m.LeaderHost
	}
	return ""
}

func (m *AppendEntriesReuqest) GetLeaderExHost() string {
	if m != nil {
		return m.LeaderExHost
	}
	return ""
}

func (m *AppendEntriesReuqest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendEntriesResponse struct {
	Success     bool   `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
	Term        uint64 `protobuf:"varint,2,opt,name=Term" json:"Term,omitempty"`
	Index       uint64 `protobuf:"varint,3,opt,name=Index" json:"Index,omitempty"`
	CommitIndex uint64 `protobuf:"varint,4,opt,name=CommitIndex" json:"CommitIndex,omitempty"`
}

func (m *AppendEntriesResponse) Reset()                    { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string            { return proto1.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()               {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendEntriesResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *AppendEntriesResponse) GetCommitIndex() uint64 {
	if m != nil {
		return m.CommitIndex
	}
	return 0
}

func init() {
	proto1.RegisterType((*AppendEntriesReuqest)(nil), "proto.AppendEntriesReuqest")
	proto1.RegisterType((*AppendEntriesResponse)(nil), "proto.AppendEntriesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AppendEntries service

type AppendEntriesClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesReuqest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
}

type appendEntriesClient struct {
	cc *grpc.ClientConn
}

func NewAppendEntriesClient(cc *grpc.ClientConn) AppendEntriesClient {
	return &appendEntriesClient{cc}
}

func (c *appendEntriesClient) AppendEntries(ctx context.Context, in *AppendEntriesReuqest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := grpc.Invoke(ctx, "/proto.AppendEntries/AppendEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AppendEntries service

type AppendEntriesServer interface {
	AppendEntries(context.Context, *AppendEntriesReuqest) (*AppendEntriesResponse, error)
}

func RegisterAppendEntriesServer(s *grpc.Server, srv AppendEntriesServer) {
	s.RegisterService(&_AppendEntries_serviceDesc, srv)
}

func _AppendEntries_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesReuqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppendEntriesServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AppendEntries/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppendEntriesServer).AppendEntries(ctx, req.(*AppendEntriesReuqest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppendEntries_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AppendEntries",
	HandlerType: (*AppendEntriesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _AppendEntries_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "appendentry_request.proto",
}

func init() { proto1.RegisterFile("appendentry_request.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x86, 0xbf, 0xb6, 0x49, 0x7f, 0x4e, 0xbf, 0x52, 0x18, 0x2a, 0x8c, 0x55, 0x24, 0x04, 0x17,
	0x75, 0xd3, 0x45, 0xbd, 0x02, 0x91, 0x8a, 0x42, 0x10, 0x89, 0x6e, 0xa5, 0xc4, 0xe6, 0x10, 0x02,
	0x26, 0x93, 0xce, 0x4c, 0xa0, 0x5d, 0x78, 0x75, 0xde, 0x98, 0xe4, 0x4c, 0x1b, 0x27, 0xb5, 0xab,
	0xe4, 0x3c, 0xef, 0x9b, 0x33, 0xc9, 0x13, 0x38, 0x8f, 0x8a, 0x02, 0xf3, 0x18, 0x73, 0x2d, 0x77,
	0x2b, 0x89, 0x9b, 0x12, 0x95, 0x9e, 0x17, 0x52, 0x68, 0xc1, 0x5c, 0xba, 0x4c, 0xc7, 0x9f, 0x22,
	0x59, 0x51, 0x6e, 0xb8, 0xff, 0xdd, 0x86, 0xc9, 0x1d, 0x3d, 0xb5, 0xcc, 0xb5, 0x4c, 0x51, 0x85,
	0x58, 0x6e, 0x50, 0x69, 0xc6, 0xc0, 0x79, 0x43, 0x99, 0xf1, 0x96, 0xd7, 0x9a, 0x39, 0x21, 0xdd,
	0xb3, 0x6b, 0x18, 0x3d, 0xa4, 0x52, 0xe9, 0x40, 0x24, 0x4f, 0x79, 0x8c, 0x5b, 0xde, 0xa6, 0xb0,
	0x09, 0x99, 0x07, 0xc3, 0x17, 0x89, 0x75, 0xa7, 0x43, 0x1d, 0x1b, 0xb1, 0x2b, 0x00, 0x33, 0xd2,
	0x09, 0x0e, 0x15, 0x2c, 0x52, 0x6d, 0xb8, 0x17, 0x59, 0x96, 0x6a, 0xb3, 0xc1, 0x35, 0x1b, 0x2c,
	0x54, 0x6d, 0x08, 0x30, 0x8a, 0x51, 0x3e, 0x47, 0x19, 0xf2, 0xae, 0xd7, 0x9a, 0x0d, 0x42, 0x8b,
	0xfc, 0xe6, 0x8f, 0x42, 0x69, 0xde, 0xb3, 0xf3, 0x8a, 0x30, 0x1f, 0xfe, 0x9b, 0x69, 0xb9, 0xa5,
	0x46, 0x9f, 0x1a, 0x0d, 0xc6, 0x6e, 0xa0, 0xb7, 0x77, 0xc2, 0x07, 0x5e, 0x67, 0x36, 0x5c, 0x8c,
	0x8d, 0xb3, 0x79, 0x20, 0x92, 0x2a, 0xd8, 0x85, 0x87, 0xdc, 0xff, 0x82, 0xb3, 0x23, 0x89, 0xaa,
	0x10, 0xb9, 0x42, 0xc6, 0xa1, 0xf7, 0x5a, 0xae, 0xd7, 0xa8, 0x14, 0x89, 0xec, 0x87, 0x87, 0xb1,
	0xf6, 0xdb, 0xb6, 0xfc, 0x4e, 0xc0, 0xb5, 0x9d, 0xb9, 0xb5, 0x4f, 0xdb, 0x86, 0xf3, 0xc7, 0xc6,
	0xe2, 0x1d, 0x46, 0x8d, 0xe3, 0x59, 0x70, 0x0c, 0x2e, 0xf6, 0xaf, 0x7e, 0xea, 0x57, 0x4f, 0x2f,
	0x4f, 0x87, 0xe6, 0x13, 0xfc, 0x7f, 0x1f, 0x5d, 0x8a, 0x6f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x81, 0x89, 0x84, 0x0a, 0x5f, 0x02, 0x00, 0x00,
}
